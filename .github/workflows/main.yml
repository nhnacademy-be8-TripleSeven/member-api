name: CI/CD Pipeline for Spring Boot Member Api

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: mvn -B package -DskipTests --file pom.xml

      - name: Build Docker image
        run: |
          docker build -t lushlife99/nhn-member:${{ github.sha }} .

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image
        run: |
          docker push lushlife99/nhn-member:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libxml2-utils

      - name: Deploy to First Instance
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_IP }}
          username: ${{ secrets.SSH_ID }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            docker pull lushlife99/nhn-member:${{ github.sha }}
            if [ "$(docker ps -aq --filter "name=member-api-instance-1")" ]; then
              docker stop member-api-instance-1 || true
              docker rm -f member-api-instance-1 || true
            fi
            docker run --name member-api-instance-1 --network nhn-book-store-network -p 8082:8082 -e SPRING_PROFILES_ACTIVE=instance1 -d lushlife99/nhn-member:${{ github.sha }}

      - name: Check First Instance via Eureka
        run: |
          START_TIME=$(date +%s)
          while : ; do
            RESPONSE=$(curl -s -H "Accept: application/xml" http://${{ secrets.EUREKA_USERNAME }}:${{ secrets.EUREKA_PASSWORD }}@nhn24.store/eureka/eureka/instances/member-api-1)

            # 응답이 비어 있는지 확인
            if [ -z "$RESPONSE" ]; then
              echo "Error: Empty response from Eureka server."
              exit 1
            fi

            # XML 파싱을 위해 xmllint 사용
            STATUS=$(echo "$RESPONSE" | xmllint --xpath "string(//status)" - 2>/dev/null)

            # xmllint 파싱이 실패하면 오류 처리
            if [ $? -ne 0 ]; then
              echo "Error: Failed to parse XML response."
              echo "Response received: $RESPONSE"
              exit 1
            fi

            # 상태가 "UP"이면 종료
            if [ "$STATUS" == "UP" ]; then
              echo "First instance is healthy and UP."
              break
            fi

            # 180초 경과 체크
            CURRENT_TIME=$(date +%s)
            ELAPSED_TIME=$((CURRENT_TIME - START_TIME))
            if [ $ELAPSED_TIME -ge 180 ]; then
              echo "First instance is not healthy within 3 minutes. Aborting deployment."
              exit 1
            fi

            # 10초 대기 후 재시도
            sleep 10
          done

      - name: Deploy to Second Instance
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_IP }}
          username: ${{ secrets.SSH_ID }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            docker pull lushlife99/nhn-member:${{ github.sha }}
            if [ "$(docker ps -aq --filter "name=member-api-instance-2")" ]; then
              docker stop member-api-instance-2 || true
              docker rm -f member-api-instance-2 || true
            fi
            docker run --name member-api-instance-2 --network nhn-book-store-network -p 8083:8083 -e SPRING_PROFILES_ACTIVE=instance2 -d lushlife99/nhn-member:${{ github.sha }}

      - name: Check Second Instance via Eureka
        run: |
          START_TIME=$(date +%s)
          while : ; do
            RESPONSE=$(curl -s -H "Accept: application/xml" http://${{ secrets.EUREKA_USERNAME }}:${{ secrets.EUREKA_PASSWORD }}@nhn24.store/eureka/eureka/instances/member-api-2)

            # 응답이 비어 있는지 확인
            if [ -z "$RESPONSE" ]; then
              echo "Error: Empty response from Eureka server."
              exit 1
            fi

            # XML 파싱을 위해 xmllint 사용
            STATUS=$(echo "$RESPONSE" | xmllint --xpath "string(//status)" - 2>/dev/null)

            # xmllint 파싱이 실패하면 오류 처리
            if [ $? -ne 0 ]; then
              echo "Error: Failed to parse XML response."
              echo "Response received: $RESPONSE"
              exit 1
            fi

            # 상태가 "UP"이면 종료
            if [ "$STATUS" == "UP" ]; then
              echo "Second instance is healthy and UP."
              break
            fi

            # 180초 경과 체크
            CURRENT_TIME=$(date +%s)
            ELAPSED_TIME=$((CURRENT_TIME - START_TIME))
            if [ $ELAPSED_TIME -ge 180 ]; then
              echo "Second instance is not healthy within 3 minutes. Aborting deployment."
              exit 1
            fi

            # 10초 대기 후 재시도
            sleep 10
          done
