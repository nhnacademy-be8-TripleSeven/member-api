name: CI/CD Pipeline for Spring Boot Member Api

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: mvn -B package -DskipTests --file pom.xml

      - name: Build Docker image
        run: |
          docker build -t lushlife99/nhn-member:${{ github.sha }} .

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image
        run: |
          docker push lushlife99/nhn-member:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}

      - name: Install jq
        run: |
          sudo apt-get update
          sudo apt-get install -y jq

      - name: Deploy to Instance
        run: |
          deploy_instance() {
            INSTANCE_NAME=$1
            PORT=$2
            RESPONSE=$(curl -s http://${{ secrets.EUREKA_USERNAME }}:${{ secrets.EUREKA_PASSWORD }}@nhn24.store/eureka/eureka/instances/${INSTANCE_NAME})
            STATUS=$(echo "$RESPONSE" | xmllint --xpath "string(//status)" -)

            # Deploy Docker container
            docker pull lushlife99/nhn-member:${{ github.sha }}
            if [ "$(docker ps -aq --filter "name=${INSTANCE_NAME}")" ]; then
              docker stop ${INSTANCE_NAME} || true
              docker rm -f ${INSTANCE_NAME} || true
            fi
            docker run --name ${INSTANCE_NAME} --network nhn-book-store-network -p ${PORT}:${PORT} -e SPRING_PROFILES_ACTIVE=${INSTANCE_NAME} -d lushlife99/nhn-member:${{ github.sha }}
          
            # Check instance health
            START_TIME=$(date +%s)
            while : ; do
              RESPONSE=$(curl -s http://${{ secrets.EUREKA_USERNAME }}:${{ secrets.EUREKA_PASSWORD }}@nhn24.store/eureka/eureka/instances/${INSTANCE_NAME})
              STATUS=$(echo "$RESPONSE" | jq -r '.status')
              if [ "$STATUS" == "UP" ]; then
                echo "${INSTANCE_NAME} is healthy and UP."
                break
              fi
              CURRENT_TIME=$(date +%s)
              ELAPSED_TIME=$((CURRENT_TIME - START_TIME))
              if [ $ELAPSED_TIME -ge 180 ]; then
                echo "${INSTANCE_NAME} is not healthy within 3 minutes. Aborting deployment."
                exit 1
              fi
              sleep 10
            done
          }

      - name: Deploy to First Instance
        run: |
          deploy_instance "member-api-1" 8082

      - name: Deploy to Second Instance
        run: |
          deploy_instance "member-api-2" 8083
