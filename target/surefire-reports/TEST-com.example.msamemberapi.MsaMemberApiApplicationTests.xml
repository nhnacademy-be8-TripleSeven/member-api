<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report.xsd" version="3.0.2" name="com.example.msamemberapi.MsaMemberApiApplicationTests" time="8.717" tests="1" errors="0" skipped="0" failures="0">
  <properties>
    <property name="java.specification.version" value="21"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.class.path" value="/Users/choeeunhwa/Desktop/member-api5/target/test-classes:/Users/choeeunhwa/Desktop/member-api5/target/classes:/Users/choeeunhwa/.m2/repository/org/springframework/boot/spring-boot-starter-data-jpa/3.4.0/spring-boot-starter-data-jpa-3.4.0.jar:/Users/choeeunhwa/.m2/repository/org/springframework/boot/spring-boot-starter/3.4.0/spring-boot-starter-3.4.0.jar:/Users/choeeunhwa/.m2/repository/org/springframework/boot/spring-boot/3.4.0/spring-boot-3.4.0.jar:/Users/choeeunhwa/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/3.4.0/spring-boot-autoconfigure-3.4.0.jar:/Users/choeeunhwa/.m2/repository/jakarta/annotation/jakarta.annotation-api/2.1.1/jakarta.annotation-api-2.1.1.jar:/Users/choeeunhwa/.m2/repository/org/yaml/snakeyaml/2.3/snakeyaml-2.3.jar:/Users/choeeunhwa/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/3.4.0/spring-boot-starter-jdbc-3.4.0.jar:/Users/choeeunhwa/.m2/repository/com/zaxxer/HikariCP/5.1.0/HikariCP-5.1.0.jar:/Users/choeeunhwa/.m2/repository/org/springframework/spring-jdbc/6.2.0/spring-jdbc-6.2.0.jar:/Users/choeeunhwa/.m2/repository/org/hibernate/orm/hibernate-core/6.6.2.Final/hibernate-core-6.6.2.Final.jar:/Users/choeeunhwa/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/choeeunhwa/.m2/repository/org/jboss/logging/jboss-logging/3.6.1.Final/jboss-logging-3.6.1.Final.jar:/Users/choeeunhwa/.m2/repository/org/hibernate/common/hibernate-commons-annotations/7.0.3.Final/hibernate-commons-annotations-7.0.3.Final.jar:/Users/choeeunhwa/.m2/repository/io/smallrye/jandex/3.2.0/jandex-3.2.0.jar:/Users/choeeunhwa/.m2/repository/com/fasterxml/classmate/1.7.0/classmate-1.7.0.jar:/Users/choeeunhwa/.m2/repository/net/bytebuddy/byte-buddy/1.15.10/byte-buddy-1.15.10.jar:/Users/choeeunhwa/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.5/jaxb-runtime-4.0.5.jar:/Users/choeeunhwa/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.5/jaxb-core-4.0.5.jar:/Users/choeeunhwa/.m2/repository/org/eclipse/angus/angus-activation/2.0.2/angus-activation-2.0.2.jar:/Users/choeeunhwa/.m2/repository/org/glassfish/jaxb/txw2/4.0.5/txw2-4.0.5.jar:/Users/choeeunhwa/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.2/istack-commons-runtime-4.1.2.jar:/Users/choeeunhwa/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/choeeunhwa/.m2/repository/org/antlr/antlr4-runtime/4.13.0/antlr4-runtime-4.13.0.jar:/Users/choeeunhwa/.m2/repository/org/springframework/data/spring-data-jpa/3.4.0/spring-data-jpa-3.4.0.jar:/Users/choeeunhwa/.m2/repository/org/springframework/data/spring-data-commons/3.4.0/spring-data-commons-3.4.0.jar:/Users/choeeunhwa/.m2/repository/org/springframework/spring-orm/6.2.0/spring-orm-6.2.0.jar:/Users/choeeunhwa/.m2/repository/org/springframework/spring-context/6.2.0/spring-context-6.2.0.jar:/Users/choeeunhwa/.m2/repository/org/springframework/spring-aop/6.2.0/spring-aop-6.2.0.jar:/Users/choeeunhwa/.m2/repository/org/springframework/spring-tx/6.2.0/spring-tx-6.2.0.jar:/Users/choeeunhwa/.m2/repository/org/springframework/spring-beans/6.2.0/spring-beans-6.2.0.jar:/Users/choeeunhwa/.m2/repository/org/slf4j/slf4j-api/2.0.16/slf4j-api-2.0.16.jar:/Users/choeeunhwa/.m2/repository/org/springframework/spring-aspects/6.2.0/spring-aspects-6.2.0.jar:/Users/choeeunhwa/.m2/repository/org/aspectj/aspectjweaver/1.9.22.1/aspectjweaver-1.9.22.1.jar:/Users/choeeunhwa/.m2/repository/org/springframework/boot/spring-boot-starter-web/3.4.0/spring-boot-starter-web-3.4.0.jar:/Users/choeeunhwa/.m2/repository/org/springframework/boot/spring-boot-starter-json/3.4.0/spring-boot-starter-json-3.4.0.jar:/Users/choeeunhwa/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.18.1/jackson-datatype-jdk8-2.18.1.jar:/Users/choeeunhwa/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.18.1/jackson-datatype-jsr310-2.18.1.jar:/Users/choeeunhwa/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.18.1/jackson-module-parameter-names-2.18.1.jar:/Users/choeeunhwa/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/3.4.0/spring-boot-starter-tomcat-3.4.0.jar:/Users/choeeunhwa/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/10.1.33/tomcat-embed-core-10.1.33.jar:/Users/choeeunhwa/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/10.1.33/tomcat-embed-websocket-10.1.33.jar:/Users/choeeunhwa/.m2/repository/org/springframework/spring-web/6.2.0/spring-web-6.2.0.jar:/Users/choeeunhwa/.m2/repository/org/springframework/spring-webmvc/6.2.0/spring-webmvc-6.2.0.jar:/Users/choeeunhwa/.m2/repository/org/springframework/spring-expression/6.2.0/spring-expression-6.2.0.jar:/Users/choeeunhwa/.m2/repository/org/springframework/boot/spring-boot-starter-actuator/3.4.0/spring-boot-starter-actuator-3.4.0.jar:/Users/choeeunhwa/.m2/repository/org/springframework/boot/spring-boot-actuator-autoconfigure/3.4.0/spring-boot-actuator-autoconfigure-3.4.0.jar:/Users/choeeunhwa/.m2/repository/org/springframework/boot/spring-boot-actuator/3.4.0/spring-boot-actuator-3.4.0.jar:/Users/choeeunhwa/.m2/repository/io/micrometer/micrometer-observation/1.14.1/micrometer-observation-1.14.1.jar:/Users/choeeunhwa/.m2/repository/io/micrometer/micrometer-commons/1.14.1/micrometer-commons-1.14.1.jar:/Users/choeeunhwa/.m2/repository/io/micrometer/micrometer-jakarta9/1.14.1/micrometer-jakarta9-1.14.1.jar:/Users/choeeunhwa/.m2/repository/io/micrometer/micrometer-core/1.14.1/micrometer-core-1.14.1.jar:/Users/choeeunhwa/.m2/repository/org/hdrhistogram/HdrHistogram/2.2.2/HdrHistogram-2.2.2.jar:/Users/choeeunhwa/.m2/repository/org/latencyutils/LatencyUtils/2.0.3/LatencyUtils-2.0.3.jar:/Users/choeeunhwa/.m2/repository/org/springframework/cloud/spring-cloud-starter-netflix-eureka-client/4.2.0/spring-cloud-starter-netflix-eureka-client-4.2.0.jar:/Users/choeeunhwa/.m2/repository/org/springframework/cloud/spring-cloud-starter/4.2.0/spring-cloud-starter-4.2.0.jar:/Users/choeeunhwa/.m2/repository/org/springframework/cloud/spring-cloud-context/4.2.0/spring-cloud-context-4.2.0.jar:/Users/choeeunhwa/.m2/repository/org/bouncycastle/bcprov-jdk18on/1.78.1/bcprov-jdk18on-1.78.1.jar:/Users/choeeunhwa/.m2/repository/org/springframework/cloud/spring-cloud-netflix-eureka-client/4.2.0/spring-cloud-netflix-eureka-client-4.2.0.jar:/Users/choeeunhwa/.m2/repository/org/apache/httpcomponents/client5/httpclient5/5.4.1/httpclient5-5.4.1.jar:/Users/choeeunhwa/.m2/repository/org/apache/httpcomponents/core5/httpcore5/5.3.1/httpcore5-5.3.1.jar:/Users/choeeunhwa/.m2/repository/org/apache/httpcomponents/core5/httpcore5-h2/5.3.1/httpcore5-h2-5.3.1.jar:/Users/choeeunhwa/.m2/repository/com/netflix/eureka/eureka-client/2.0.4/eureka-client-2.0.4.jar:/Users/choeeunhwa/.m2/repository/com/thoughtworks/xstream/xstream/1.4.20/xstream-1.4.20.jar:/Users/choeeunhwa/.m2/repository/io/github/x-stream/mxparser/1.2.2/mxparser-1.2.2.jar:/Users/choeeunhwa/.m2/repository/xmlpull/xmlpull/1.1.3.1/xmlpull-1.1.3.1.jar:/Users/choeeunhwa/.m2/repository/jakarta/ws/rs/jakarta.ws.rs-api/3.1.0/jakarta.ws.rs-api-3.1.0.jar:/Users/choeeunhwa/.m2/repository/com/netflix/spectator/spectator-api/1.7.3/spectator-api-1.7.3.jar:/Users/choeeunhwa/.m2/repository/commons-configuration/commons-configuration/1.10/commons-configuration-1.10.jar:/Users/choeeunhwa/.m2/repository/commons-lang/commons-lang/2.6/commons-lang-2.6.jar:/Users/choeeunhwa/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.18.1/jackson-annotations-2.18.1.jar:/Users/choeeunhwa/.m2/repository/com/netflix/netflix-commons/netflix-eventbus/0.3.0/netflix-eventbus-0.3.0.jar:/Users/choeeunhwa/.m2/repository/com/netflix/netflix-commons/netflix-infix/0.3.0/netflix-infix-0.3.0.jar:/Users/choeeunhwa/.m2/repository/commons-jxpath/commons-jxpath/1.3/commons-jxpath-1.3.jar:/Users/choeeunhwa/.m2/repository/joda-time/joda-time/2.3/joda-time-2.3.jar:/Users/choeeunhwa/.m2/repository/org/antlr/antlr-runtime/3.4/antlr-runtime-3.4.jar:/Users/choeeunhwa/.m2/repository/org/antlr/stringtemplate/3.2.1/stringtemplate-3.2.1.jar:/Users/choeeunhwa/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/choeeunhwa/.m2/repository/com/google/guava/guava/33.3.1-jre/guava-33.3.1-jre.jar:/Users/choeeunhwa/.m2/repository/com/google/guava/failureaccess/1.0.2/failureaccess-1.0.2.jar:/Users/choeeunhwa/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/Users/choeeunhwa/.m2/repository/org/checkerframework/checker-qual/3.43.0/checker-qual-3.43.0.jar:/Users/choeeunhwa/.m2/repository/com/google/errorprone/error_prone_annotations/2.28.0/error_prone_annotations-2.28.0.jar:/Users/choeeunhwa/.m2/repository/com/google/j2objc/j2objc-annotations/3.0.0/j2objc-annotations-3.0.0.jar:/Users/choeeunhwa/.m2/repository/com/google/code/gson/gson/2.11.0/gson-2.11.0.jar:/Users/choeeunhwa/.m2/repository/com/netflix/servo/servo-core/0.5.3/servo-core-0.5.3.jar:/Users/choeeunhwa/.m2/repository/org/apache/commons/commons-math/2.2/commons-math-2.2.jar:/Users/choeeunhwa/.m2/repository/javax/annotation/javax.annotation-api/1.2/javax.annotation-api-1.2.jar:/Users/choeeunhwa/.m2/repository/org/codehaus/jettison/jettison/1.5.4/jettison-1.5.4.jar:/Users/choeeunhwa/.m2/repository/org/springframework/cloud/spring-cloud-starter-loadbalancer/4.2.0/spring-cloud-starter-loadbalancer-4.2.0.jar:/Users/choeeunhwa/.m2/repository/org/springframework/cloud/spring-cloud-loadbalancer/4.2.0/spring-cloud-loadbalancer-4.2.0.jar:/Users/choeeunhwa/.m2/repository/io/projectreactor/addons/reactor-extra/3.5.2/reactor-extra-3.5.2.jar:/Users/choeeunhwa/.m2/repository/org/springframework/boot/spring-boot-starter-cache/3.4.0/spring-boot-starter-cache-3.4.0.jar:/Users/choeeunhwa/.m2/repository/com/stoyanr/evictor/1.0.0/evictor-1.0.0.jar:/Users/choeeunhwa/.m2/repository/org/springframework/cloud/spring-cloud-starter-openfeign/3.1.5/spring-cloud-starter-openfeign-3.1.5.jar:/Users/choeeunhwa/.m2/repository/org/springframework/cloud/spring-cloud-openfeign-core/4.2.0/spring-cloud-openfeign-core-4.2.0.jar:/Users/choeeunhwa/.m2/repository/io/github/openfeign/feign-form-spring/13.5/feign-form-spring-13.5.jar:/Users/choeeunhwa/.m2/repository/io/github/openfeign/feign-form/13.5/feign-form-13.5.jar:/Users/choeeunhwa/.m2/repository/commons-fileupload/commons-fileupload/1.5/commons-fileupload-1.5.jar:/Users/choeeunhwa/.m2/repository/commons-io/commons-io/2.11.0/commons-io-2.11.0.jar:/Users/choeeunhwa/.m2/repository/org/springframework/cloud/spring-cloud-commons/4.2.0/spring-cloud-commons-4.2.0.jar:/Users/choeeunhwa/.m2/repository/io/github/openfeign/feign-core/13.5/feign-core-13.5.jar:/Users/choeeunhwa/.m2/repository/io/github/openfeign/feign-slf4j/13.5/feign-slf4j-13.5.jar:/Users/choeeunhwa/.m2/repository/org/springframework/boot/spring-boot-starter-webflux/3.4.0/spring-boot-starter-webflux-3.4.0.jar:/Users/choeeunhwa/.m2/repository/org/springframework/boot/spring-boot-starter-reactor-netty/3.4.0/spring-boot-starter-reactor-netty-3.4.0.jar:/Users/choeeunhwa/.m2/repository/io/projectreactor/netty/reactor-netty-http/1.2.0/reactor-netty-http-1.2.0.jar:/Users/choeeunhwa/.m2/repository/io/netty/netty-codec-http/4.1.115.Final/netty-codec-http-4.1.115.Final.jar:/Users/choeeunhwa/.m2/repository/io/netty/netty-codec-http2/4.1.115.Final/netty-codec-http2-4.1.115.Final.jar:/Users/choeeunhwa/.m2/repository/io/netty/netty-resolver-dns/4.1.115.Final/netty-resolver-dns-4.1.115.Final.jar:/Users/choeeunhwa/.m2/repository/io/netty/netty-codec-dns/4.1.115.Final/netty-codec-dns-4.1.115.Final.jar:/Users/choeeunhwa/.m2/repository/io/netty/netty-resolver-dns-native-macos/4.1.115.Final/netty-resolver-dns-native-macos-4.1.115.Final-osx-x86_64.jar:/Users/choeeunhwa/.m2/repository/io/netty/netty-resolver-dns-classes-macos/4.1.115.Final/netty-resolver-dns-classes-macos-4.1.115.Final.jar:/Users/choeeunhwa/.m2/repository/io/netty/netty-transport-native-epoll/4.1.115.Final/netty-transport-native-epoll-4.1.115.Final-linux-x86_64.jar:/Users/choeeunhwa/.m2/repository/io/netty/netty-transport-classes-epoll/4.1.115.Final/netty-transport-classes-epoll-4.1.115.Final.jar:/Users/choeeunhwa/.m2/repository/io/projectreactor/netty/reactor-netty-core/1.2.0/reactor-netty-core-1.2.0.jar:/Users/choeeunhwa/.m2/repository/io/netty/netty-handler-proxy/4.1.115.Final/netty-handler-proxy-4.1.115.Final.jar:/Users/choeeunhwa/.m2/repository/io/netty/netty-codec-socks/4.1.115.Final/netty-codec-socks-4.1.115.Final.jar:/Users/choeeunhwa/.m2/repository/org/springframework/spring-webflux/6.2.0/spring-webflux-6.2.0.jar:/Users/choeeunhwa/.m2/repository/io/lettuce/lettuce-core/6.5.2.RELEASE/lettuce-core-6.5.2.RELEASE.jar:/Users/choeeunhwa/.m2/repository/io/netty/netty-common/4.1.115.Final/netty-common-4.1.115.Final.jar:/Users/choeeunhwa/.m2/repository/io/netty/netty-handler/4.1.115.Final/netty-handler-4.1.115.Final.jar:/Users/choeeunhwa/.m2/repository/io/netty/netty-resolver/4.1.115.Final/netty-resolver-4.1.115.Final.jar:/Users/choeeunhwa/.m2/repository/io/netty/netty-buffer/4.1.115.Final/netty-buffer-4.1.115.Final.jar:/Users/choeeunhwa/.m2/repository/io/netty/netty-transport-native-unix-common/4.1.115.Final/netty-transport-native-unix-common-4.1.115.Final.jar:/Users/choeeunhwa/.m2/repository/io/netty/netty-codec/4.1.115.Final/netty-codec-4.1.115.Final.jar:/Users/choeeunhwa/.m2/repository/io/netty/netty-transport/4.1.115.Final/netty-transport-4.1.115.Final.jar:/Users/choeeunhwa/.m2/repository/io/projectreactor/reactor-core/3.7.0/reactor-core-3.7.0.jar:/Users/choeeunhwa/.m2/repository/org/reactivestreams/reactive-streams/1.0.4/reactive-streams-1.0.4.jar:/Users/choeeunhwa/.m2/repository/com/mysql/mysql-connector-j/9.1.0/mysql-connector-j-9.1.0.jar:/Users/choeeunhwa/.m2/repository/org/springframework/security/spring-security-crypto/6.4.1/spring-security-crypto-6.4.1.jar:/Users/choeeunhwa/.m2/repository/org/projectlombok/lombok/1.18.36/lombok-1.18.36.jar:/Users/choeeunhwa/.m2/repository/org/springframework/boot/spring-boot-starter-test/3.4.0/spring-boot-starter-test-3.4.0.jar:/Users/choeeunhwa/.m2/repository/org/springframework/boot/spring-boot-test/3.4.0/spring-boot-test-3.4.0.jar:/Users/choeeunhwa/.m2/repository/org/springframework/boot/spring-boot-test-autoconfigure/3.4.0/spring-boot-test-autoconfigure-3.4.0.jar:/Users/choeeunhwa/.m2/repository/com/jayway/jsonpath/json-path/2.9.0/json-path-2.9.0.jar:/Users/choeeunhwa/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.2/jakarta.xml.bind-api-4.0.2.jar:/Users/choeeunhwa/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.3/jakarta.activation-api-2.1.3.jar:/Users/choeeunhwa/.m2/repository/net/minidev/json-smart/2.5.1/json-smart-2.5.1.jar:/Users/choeeunhwa/.m2/repository/net/minidev/accessors-smart/2.5.1/accessors-smart-2.5.1.jar:/Users/choeeunhwa/.m2/repository/org/ow2/asm/asm/9.6/asm-9.6.jar:/Users/choeeunhwa/.m2/repository/org/assertj/assertj-core/3.26.3/assertj-core-3.26.3.jar:/Users/choeeunhwa/.m2/repository/org/awaitility/awaitility/4.2.2/awaitility-4.2.2.jar:/Users/choeeunhwa/.m2/repository/org/hamcrest/hamcrest/2.2/hamcrest-2.2.jar:/Users/choeeunhwa/.m2/repository/org/junit/jupiter/junit-jupiter/5.11.3/junit-jupiter-5.11.3.jar:/Users/choeeunhwa/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.11.3/junit-jupiter-api-5.11.3.jar:/Users/choeeunhwa/.m2/repository/org/opentest4j/opentest4j/1.3.0/opentest4j-1.3.0.jar:/Users/choeeunhwa/.m2/repository/org/junit/platform/junit-platform-commons/1.11.3/junit-platform-commons-1.11.3.jar:/Users/choeeunhwa/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/Users/choeeunhwa/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.11.3/junit-jupiter-params-5.11.3.jar:/Users/choeeunhwa/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.11.3/junit-jupiter-engine-5.11.3.jar:/Users/choeeunhwa/.m2/repository/org/junit/platform/junit-platform-engine/1.11.3/junit-platform-engine-1.11.3.jar:/Users/choeeunhwa/.m2/repository/org/mockito/mockito-core/5.14.2/mockito-core-5.14.2.jar:/Users/choeeunhwa/.m2/repository/net/bytebuddy/byte-buddy-agent/1.15.10/byte-buddy-agent-1.15.10.jar:/Users/choeeunhwa/.m2/repository/org/objenesis/objenesis/3.3/objenesis-3.3.jar:/Users/choeeunhwa/.m2/repository/org/mockito/mockito-junit-jupiter/5.14.2/mockito-junit-jupiter-5.14.2.jar:/Users/choeeunhwa/.m2/repository/org/skyscreamer/jsonassert/1.5.3/jsonassert-1.5.3.jar:/Users/choeeunhwa/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar:/Users/choeeunhwa/.m2/repository/org/springframework/spring-core/6.2.0/spring-core-6.2.0.jar:/Users/choeeunhwa/.m2/repository/org/springframework/spring-jcl/6.2.0/spring-jcl-6.2.0.jar:/Users/choeeunhwa/.m2/repository/org/springframework/spring-test/6.2.0/spring-test-6.2.0.jar:/Users/choeeunhwa/.m2/repository/org/xmlunit/xmlunit-core/2.10.0/xmlunit-core-2.10.0.jar:/Users/choeeunhwa/.m2/repository/com/sun/mail/javax.mail/1.6.2/javax.mail-1.6.2.jar:/Users/choeeunhwa/.m2/repository/javax/activation/activation/1.1/activation-1.1.jar:/Users/choeeunhwa/.m2/repository/org/apache/commons/commons-dbcp2/2.11.0/commons-dbcp2-2.11.0.jar:/Users/choeeunhwa/.m2/repository/org/apache/commons/commons-pool2/2.12.0/commons-pool2-2.12.0.jar:/Users/choeeunhwa/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/choeeunhwa/.m2/repository/org/springdoc/springdoc-openapi-starter-webmvc-ui/2.7.0/springdoc-openapi-starter-webmvc-ui-2.7.0.jar:/Users/choeeunhwa/.m2/repository/org/springdoc/springdoc-openapi-starter-webmvc-api/2.7.0/springdoc-openapi-starter-webmvc-api-2.7.0.jar:/Users/choeeunhwa/.m2/repository/org/springdoc/springdoc-openapi-starter-common/2.7.0/springdoc-openapi-starter-common-2.7.0.jar:/Users/choeeunhwa/.m2/repository/io/swagger/core/v3/swagger-core-jakarta/2.2.25/swagger-core-jakarta-2.2.25.jar:/Users/choeeunhwa/.m2/repository/org/apache/commons/commons-lang3/3.17.0/commons-lang3-3.17.0.jar:/Users/choeeunhwa/.m2/repository/io/swagger/core/v3/swagger-annotations-jakarta/2.2.25/swagger-annotations-jakarta-2.2.25.jar:/Users/choeeunhwa/.m2/repository/io/swagger/core/v3/swagger-models-jakarta/2.2.25/swagger-models-jakarta-2.2.25.jar:/Users/choeeunhwa/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.18.1/jackson-dataformat-yaml-2.18.1.jar:/Users/choeeunhwa/.m2/repository/org/webjars/swagger-ui/5.18.2/swagger-ui-5.18.2.jar:/Users/choeeunhwa/.m2/repository/org/webjars/webjars-locator-lite/1.0.1/webjars-locator-lite-1.0.1.jar:/Users/choeeunhwa/.m2/repository/org/jspecify/jspecify/1.0.0/jspecify-1.0.0.jar:/Users/choeeunhwa/Desktop/member-api5/libs/toast-logncrash-logback-sdk-3.0.5.jar:/Users/choeeunhwa/.m2/repository/net/logstash/logback/logstash-logback-encoder/7.4/logstash-logback-encoder-7.4.jar:/Users/choeeunhwa/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.18.1/jackson-databind-2.18.1.jar:/Users/choeeunhwa/.m2/repository/org/springframework/boot/spring-boot-starter-logging/3.4.0/spring-boot-starter-logging-3.4.0.jar:/Users/choeeunhwa/.m2/repository/ch/qos/logback/logback-classic/1.5.12/logback-classic-1.5.12.jar:/Users/choeeunhwa/.m2/repository/ch/qos/logback/logback-core/1.5.12/logback-core-1.5.12.jar:/Users/choeeunhwa/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.24.1/log4j-to-slf4j-2.24.1.jar:/Users/choeeunhwa/.m2/repository/org/apache/logging/log4j/log4j-api/2.24.1/log4j-api-2.24.1.jar:/Users/choeeunhwa/.m2/repository/org/slf4j/jul-to-slf4j/2.0.16/jul-to-slf4j-2.0.16.jar:/Users/choeeunhwa/.m2/repository/org/json/json/20230227/json-20230227.jar:/Users/choeeunhwa/.m2/repository/org/codehaus/janino/janino/3.1.10/janino-3.1.10.jar:/Users/choeeunhwa/.m2/repository/org/codehaus/janino/commons-compiler/3.1.12/commons-compiler-3.1.12.jar:/Users/choeeunhwa/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-hibernate5/2.15.2/jackson-datatype-hibernate5-2.15.2.jar:/Users/choeeunhwa/.m2/repository/javax/transaction/javax.transaction-api/1.3/javax.transaction-api-1.3.jar:/Users/choeeunhwa/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.18.1/jackson-core-2.18.1.jar:/Users/choeeunhwa/.m2/repository/org/apache/httpcomponents/httpclient/4.5.13/httpclient-4.5.13.jar:/Users/choeeunhwa/.m2/repository/org/apache/httpcomponents/httpcore/4.4.16/httpcore-4.4.16.jar:/Users/choeeunhwa/.m2/repository/commons-logging/commons-logging/1.2/commons-logging-1.2.jar:/Users/choeeunhwa/.m2/repository/commons-codec/commons-codec/1.17.1/commons-codec-1.17.1.jar:/Users/choeeunhwa/.m2/repository/org/springframework/boot/spring-boot-starter-data-redis/3.4.1/spring-boot-starter-data-redis-3.4.1.jar:/Users/choeeunhwa/.m2/repository/org/springframework/data/spring-data-redis/3.4.0/spring-data-redis-3.4.0.jar:/Users/choeeunhwa/.m2/repository/org/springframework/data/spring-data-keyvalue/3.4.0/spring-data-keyvalue-3.4.0.jar:/Users/choeeunhwa/.m2/repository/org/springframework/spring-oxm/6.2.0/spring-oxm-6.2.0.jar:/Users/choeeunhwa/.m2/repository/org/springframework/spring-context-support/6.2.0/spring-context-support-6.2.0.jar:/Users/choeeunhwa/.m2/repository/org/springframework/boot/spring-boot-starter-validation/3.4.0/spring-boot-starter-validation-3.4.0.jar:/Users/choeeunhwa/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/10.1.33/tomcat-embed-el-10.1.33.jar:/Users/choeeunhwa/.m2/repository/org/hibernate/validator/hibernate-validator/8.0.1.Final/hibernate-validator-8.0.1.Final.jar:/Users/choeeunhwa/.m2/repository/jakarta/validation/jakarta.validation-api/3.0.2/jakarta.validation-api-3.0.2.jar:/Users/choeeunhwa/.m2/repository/com/querydsl/querydsl-jpa/5.1.0/querydsl-jpa-5.1.0-jakarta.jar:/Users/choeeunhwa/.m2/repository/com/querydsl/querydsl-core/5.1.0/querydsl-core-5.1.0.jar:/Users/choeeunhwa/.m2/repository/com/mysema/commons/mysema-commons-lang/0.2.4/mysema-commons-lang-0.2.4.jar:/Users/choeeunhwa/.m2/repository/com/querydsl/querydsl-apt/5.1.0/querydsl-apt-5.1.0-jakarta.jar:/Users/choeeunhwa/.m2/repository/com/querydsl/querydsl-codegen/5.1.0/querydsl-codegen-5.1.0.jar:/Users/choeeunhwa/.m2/repository/com/querydsl/codegen-utils/5.1.0/codegen-utils-5.1.0.jar:/Users/choeeunhwa/.m2/repository/org/eclipse/jdt/ecj/3.26.0/ecj-3.26.0.jar:/Users/choeeunhwa/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar:/Users/choeeunhwa/.m2/repository/io/github/classgraph/classgraph/4.8.146/classgraph-4.8.146.jar:"/>
    <property name="java.vm.vendor" value="Amazon.com Inc."/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.vendor.url" value="https://aws.amazon.com/corretto/"/>
    <property name="user.timezone" value="Asia/Seoul"/>
    <property name="org.jboss.logging.provider" value="slf4j"/>
    <property name="os.name" value="Mac OS X"/>
    <property name="java.vm.specification.version" value="21"/>
    <property name="APPLICATION_NAME" value="member-api"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="KR"/>
    <property name="sun.boot.library.path" value="/Users/choeeunhwa/Library/Java/JavaVirtualMachines/corretto-21.0.4/Contents/Home/lib"/>
    <property name="sun.java.command" value="/Users/choeeunhwa/Desktop/member-api5/target/surefire/surefirebooter-20250123001010142_3.jar /Users/choeeunhwa/Desktop/member-api5/target/surefire 2025-01-23T00-10-10_104-jvmRun1 surefire-20250123001010142_1tmp surefire_0-20250123001010142_2tmp"/>
    <property name="http.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="/Users/choeeunhwa/Desktop/member-api5/target/test-classes:/Users/choeeunhwa/Desktop/member-api5/target/classes:/Users/choeeunhwa/.m2/repository/org/springframework/boot/spring-boot-starter-data-jpa/3.4.0/spring-boot-starter-data-jpa-3.4.0.jar:/Users/choeeunhwa/.m2/repository/org/springframework/boot/spring-boot-starter/3.4.0/spring-boot-starter-3.4.0.jar:/Users/choeeunhwa/.m2/repository/org/springframework/boot/spring-boot/3.4.0/spring-boot-3.4.0.jar:/Users/choeeunhwa/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/3.4.0/spring-boot-autoconfigure-3.4.0.jar:/Users/choeeunhwa/.m2/repository/jakarta/annotation/jakarta.annotation-api/2.1.1/jakarta.annotation-api-2.1.1.jar:/Users/choeeunhwa/.m2/repository/org/yaml/snakeyaml/2.3/snakeyaml-2.3.jar:/Users/choeeunhwa/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/3.4.0/spring-boot-starter-jdbc-3.4.0.jar:/Users/choeeunhwa/.m2/repository/com/zaxxer/HikariCP/5.1.0/HikariCP-5.1.0.jar:/Users/choeeunhwa/.m2/repository/org/springframework/spring-jdbc/6.2.0/spring-jdbc-6.2.0.jar:/Users/choeeunhwa/.m2/repository/org/hibernate/orm/hibernate-core/6.6.2.Final/hibernate-core-6.6.2.Final.jar:/Users/choeeunhwa/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/choeeunhwa/.m2/repository/org/jboss/logging/jboss-logging/3.6.1.Final/jboss-logging-3.6.1.Final.jar:/Users/choeeunhwa/.m2/repository/org/hibernate/common/hibernate-commons-annotations/7.0.3.Final/hibernate-commons-annotations-7.0.3.Final.jar:/Users/choeeunhwa/.m2/repository/io/smallrye/jandex/3.2.0/jandex-3.2.0.jar:/Users/choeeunhwa/.m2/repository/com/fasterxml/classmate/1.7.0/classmate-1.7.0.jar:/Users/choeeunhwa/.m2/repository/net/bytebuddy/byte-buddy/1.15.10/byte-buddy-1.15.10.jar:/Users/choeeunhwa/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.5/jaxb-runtime-4.0.5.jar:/Users/choeeunhwa/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.5/jaxb-core-4.0.5.jar:/Users/choeeunhwa/.m2/repository/org/eclipse/angus/angus-activation/2.0.2/angus-activation-2.0.2.jar:/Users/choeeunhwa/.m2/repository/org/glassfish/jaxb/txw2/4.0.5/txw2-4.0.5.jar:/Users/choeeunhwa/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.2/istack-commons-runtime-4.1.2.jar:/Users/choeeunhwa/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/choeeunhwa/.m2/repository/org/antlr/antlr4-runtime/4.13.0/antlr4-runtime-4.13.0.jar:/Users/choeeunhwa/.m2/repository/org/springframework/data/spring-data-jpa/3.4.0/spring-data-jpa-3.4.0.jar:/Users/choeeunhwa/.m2/repository/org/springframework/data/spring-data-commons/3.4.0/spring-data-commons-3.4.0.jar:/Users/choeeunhwa/.m2/repository/org/springframework/spring-orm/6.2.0/spring-orm-6.2.0.jar:/Users/choeeunhwa/.m2/repository/org/springframework/spring-context/6.2.0/spring-context-6.2.0.jar:/Users/choeeunhwa/.m2/repository/org/springframework/spring-aop/6.2.0/spring-aop-6.2.0.jar:/Users/choeeunhwa/.m2/repository/org/springframework/spring-tx/6.2.0/spring-tx-6.2.0.jar:/Users/choeeunhwa/.m2/repository/org/springframework/spring-beans/6.2.0/spring-beans-6.2.0.jar:/Users/choeeunhwa/.m2/repository/org/slf4j/slf4j-api/2.0.16/slf4j-api-2.0.16.jar:/Users/choeeunhwa/.m2/repository/org/springframework/spring-aspects/6.2.0/spring-aspects-6.2.0.jar:/Users/choeeunhwa/.m2/repository/org/aspectj/aspectjweaver/1.9.22.1/aspectjweaver-1.9.22.1.jar:/Users/choeeunhwa/.m2/repository/org/springframework/boot/spring-boot-starter-web/3.4.0/spring-boot-starter-web-3.4.0.jar:/Users/choeeunhwa/.m2/repository/org/springframework/boot/spring-boot-starter-json/3.4.0/spring-boot-starter-json-3.4.0.jar:/Users/choeeunhwa/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.18.1/jackson-datatype-jdk8-2.18.1.jar:/Users/choeeunhwa/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.18.1/jackson-datatype-jsr310-2.18.1.jar:/Users/choeeunhwa/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.18.1/jackson-module-parameter-names-2.18.1.jar:/Users/choeeunhwa/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/3.4.0/spring-boot-starter-tomcat-3.4.0.jar:/Users/choeeunhwa/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/10.1.33/tomcat-embed-core-10.1.33.jar:/Users/choeeunhwa/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/10.1.33/tomcat-embed-websocket-10.1.33.jar:/Users/choeeunhwa/.m2/repository/org/springframework/spring-web/6.2.0/spring-web-6.2.0.jar:/Users/choeeunhwa/.m2/repository/org/springframework/spring-webmvc/6.2.0/spring-webmvc-6.2.0.jar:/Users/choeeunhwa/.m2/repository/org/springframework/spring-expression/6.2.0/spring-expression-6.2.0.jar:/Users/choeeunhwa/.m2/repository/org/springframework/boot/spring-boot-starter-actuator/3.4.0/spring-boot-starter-actuator-3.4.0.jar:/Users/choeeunhwa/.m2/repository/org/springframework/boot/spring-boot-actuator-autoconfigure/3.4.0/spring-boot-actuator-autoconfigure-3.4.0.jar:/Users/choeeunhwa/.m2/repository/org/springframework/boot/spring-boot-actuator/3.4.0/spring-boot-actuator-3.4.0.jar:/Users/choeeunhwa/.m2/repository/io/micrometer/micrometer-observation/1.14.1/micrometer-observation-1.14.1.jar:/Users/choeeunhwa/.m2/repository/io/micrometer/micrometer-commons/1.14.1/micrometer-commons-1.14.1.jar:/Users/choeeunhwa/.m2/repository/io/micrometer/micrometer-jakarta9/1.14.1/micrometer-jakarta9-1.14.1.jar:/Users/choeeunhwa/.m2/repository/io/micrometer/micrometer-core/1.14.1/micrometer-core-1.14.1.jar:/Users/choeeunhwa/.m2/repository/org/hdrhistogram/HdrHistogram/2.2.2/HdrHistogram-2.2.2.jar:/Users/choeeunhwa/.m2/repository/org/latencyutils/LatencyUtils/2.0.3/LatencyUtils-2.0.3.jar:/Users/choeeunhwa/.m2/repository/org/springframework/cloud/spring-cloud-starter-netflix-eureka-client/4.2.0/spring-cloud-starter-netflix-eureka-client-4.2.0.jar:/Users/choeeunhwa/.m2/repository/org/springframework/cloud/spring-cloud-starter/4.2.0/spring-cloud-starter-4.2.0.jar:/Users/choeeunhwa/.m2/repository/org/springframework/cloud/spring-cloud-context/4.2.0/spring-cloud-context-4.2.0.jar:/Users/choeeunhwa/.m2/repository/org/bouncycastle/bcprov-jdk18on/1.78.1/bcprov-jdk18on-1.78.1.jar:/Users/choeeunhwa/.m2/repository/org/springframework/cloud/spring-cloud-netflix-eureka-client/4.2.0/spring-cloud-netflix-eureka-client-4.2.0.jar:/Users/choeeunhwa/.m2/repository/org/apache/httpcomponents/client5/httpclient5/5.4.1/httpclient5-5.4.1.jar:/Users/choeeunhwa/.m2/repository/org/apache/httpcomponents/core5/httpcore5/5.3.1/httpcore5-5.3.1.jar:/Users/choeeunhwa/.m2/repository/org/apache/httpcomponents/core5/httpcore5-h2/5.3.1/httpcore5-h2-5.3.1.jar:/Users/choeeunhwa/.m2/repository/com/netflix/eureka/eureka-client/2.0.4/eureka-client-2.0.4.jar:/Users/choeeunhwa/.m2/repository/com/thoughtworks/xstream/xstream/1.4.20/xstream-1.4.20.jar:/Users/choeeunhwa/.m2/repository/io/github/x-stream/mxparser/1.2.2/mxparser-1.2.2.jar:/Users/choeeunhwa/.m2/repository/xmlpull/xmlpull/1.1.3.1/xmlpull-1.1.3.1.jar:/Users/choeeunhwa/.m2/repository/jakarta/ws/rs/jakarta.ws.rs-api/3.1.0/jakarta.ws.rs-api-3.1.0.jar:/Users/choeeunhwa/.m2/repository/com/netflix/spectator/spectator-api/1.7.3/spectator-api-1.7.3.jar:/Users/choeeunhwa/.m2/repository/commons-configuration/commons-configuration/1.10/commons-configuration-1.10.jar:/Users/choeeunhwa/.m2/repository/commons-lang/commons-lang/2.6/commons-lang-2.6.jar:/Users/choeeunhwa/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.18.1/jackson-annotations-2.18.1.jar:/Users/choeeunhwa/.m2/repository/com/netflix/netflix-commons/netflix-eventbus/0.3.0/netflix-eventbus-0.3.0.jar:/Users/choeeunhwa/.m2/repository/com/netflix/netflix-commons/netflix-infix/0.3.0/netflix-infix-0.3.0.jar:/Users/choeeunhwa/.m2/repository/commons-jxpath/commons-jxpath/1.3/commons-jxpath-1.3.jar:/Users/choeeunhwa/.m2/repository/joda-time/joda-time/2.3/joda-time-2.3.jar:/Users/choeeunhwa/.m2/repository/org/antlr/antlr-runtime/3.4/antlr-runtime-3.4.jar:/Users/choeeunhwa/.m2/repository/org/antlr/stringtemplate/3.2.1/stringtemplate-3.2.1.jar:/Users/choeeunhwa/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/choeeunhwa/.m2/repository/com/google/guava/guava/33.3.1-jre/guava-33.3.1-jre.jar:/Users/choeeunhwa/.m2/repository/com/google/guava/failureaccess/1.0.2/failureaccess-1.0.2.jar:/Users/choeeunhwa/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/Users/choeeunhwa/.m2/repository/org/checkerframework/checker-qual/3.43.0/checker-qual-3.43.0.jar:/Users/choeeunhwa/.m2/repository/com/google/errorprone/error_prone_annotations/2.28.0/error_prone_annotations-2.28.0.jar:/Users/choeeunhwa/.m2/repository/com/google/j2objc/j2objc-annotations/3.0.0/j2objc-annotations-3.0.0.jar:/Users/choeeunhwa/.m2/repository/com/google/code/gson/gson/2.11.0/gson-2.11.0.jar:/Users/choeeunhwa/.m2/repository/com/netflix/servo/servo-core/0.5.3/servo-core-0.5.3.jar:/Users/choeeunhwa/.m2/repository/org/apache/commons/commons-math/2.2/commons-math-2.2.jar:/Users/choeeunhwa/.m2/repository/javax/annotation/javax.annotation-api/1.2/javax.annotation-api-1.2.jar:/Users/choeeunhwa/.m2/repository/org/codehaus/jettison/jettison/1.5.4/jettison-1.5.4.jar:/Users/choeeunhwa/.m2/repository/org/springframework/cloud/spring-cloud-starter-loadbalancer/4.2.0/spring-cloud-starter-loadbalancer-4.2.0.jar:/Users/choeeunhwa/.m2/repository/org/springframework/cloud/spring-cloud-loadbalancer/4.2.0/spring-cloud-loadbalancer-4.2.0.jar:/Users/choeeunhwa/.m2/repository/io/projectreactor/addons/reactor-extra/3.5.2/reactor-extra-3.5.2.jar:/Users/choeeunhwa/.m2/repository/org/springframework/boot/spring-boot-starter-cache/3.4.0/spring-boot-starter-cache-3.4.0.jar:/Users/choeeunhwa/.m2/repository/com/stoyanr/evictor/1.0.0/evictor-1.0.0.jar:/Users/choeeunhwa/.m2/repository/org/springframework/cloud/spring-cloud-starter-openfeign/3.1.5/spring-cloud-starter-openfeign-3.1.5.jar:/Users/choeeunhwa/.m2/repository/org/springframework/cloud/spring-cloud-openfeign-core/4.2.0/spring-cloud-openfeign-core-4.2.0.jar:/Users/choeeunhwa/.m2/repository/io/github/openfeign/feign-form-spring/13.5/feign-form-spring-13.5.jar:/Users/choeeunhwa/.m2/repository/io/github/openfeign/feign-form/13.5/feign-form-13.5.jar:/Users/choeeunhwa/.m2/repository/commons-fileupload/commons-fileupload/1.5/commons-fileupload-1.5.jar:/Users/choeeunhwa/.m2/repository/commons-io/commons-io/2.11.0/commons-io-2.11.0.jar:/Users/choeeunhwa/.m2/repository/org/springframework/cloud/spring-cloud-commons/4.2.0/spring-cloud-commons-4.2.0.jar:/Users/choeeunhwa/.m2/repository/io/github/openfeign/feign-core/13.5/feign-core-13.5.jar:/Users/choeeunhwa/.m2/repository/io/github/openfeign/feign-slf4j/13.5/feign-slf4j-13.5.jar:/Users/choeeunhwa/.m2/repository/org/springframework/boot/spring-boot-starter-webflux/3.4.0/spring-boot-starter-webflux-3.4.0.jar:/Users/choeeunhwa/.m2/repository/org/springframework/boot/spring-boot-starter-reactor-netty/3.4.0/spring-boot-starter-reactor-netty-3.4.0.jar:/Users/choeeunhwa/.m2/repository/io/projectreactor/netty/reactor-netty-http/1.2.0/reactor-netty-http-1.2.0.jar:/Users/choeeunhwa/.m2/repository/io/netty/netty-codec-http/4.1.115.Final/netty-codec-http-4.1.115.Final.jar:/Users/choeeunhwa/.m2/repository/io/netty/netty-codec-http2/4.1.115.Final/netty-codec-http2-4.1.115.Final.jar:/Users/choeeunhwa/.m2/repository/io/netty/netty-resolver-dns/4.1.115.Final/netty-resolver-dns-4.1.115.Final.jar:/Users/choeeunhwa/.m2/repository/io/netty/netty-codec-dns/4.1.115.Final/netty-codec-dns-4.1.115.Final.jar:/Users/choeeunhwa/.m2/repository/io/netty/netty-resolver-dns-native-macos/4.1.115.Final/netty-resolver-dns-native-macos-4.1.115.Final-osx-x86_64.jar:/Users/choeeunhwa/.m2/repository/io/netty/netty-resolver-dns-classes-macos/4.1.115.Final/netty-resolver-dns-classes-macos-4.1.115.Final.jar:/Users/choeeunhwa/.m2/repository/io/netty/netty-transport-native-epoll/4.1.115.Final/netty-transport-native-epoll-4.1.115.Final-linux-x86_64.jar:/Users/choeeunhwa/.m2/repository/io/netty/netty-transport-classes-epoll/4.1.115.Final/netty-transport-classes-epoll-4.1.115.Final.jar:/Users/choeeunhwa/.m2/repository/io/projectreactor/netty/reactor-netty-core/1.2.0/reactor-netty-core-1.2.0.jar:/Users/choeeunhwa/.m2/repository/io/netty/netty-handler-proxy/4.1.115.Final/netty-handler-proxy-4.1.115.Final.jar:/Users/choeeunhwa/.m2/repository/io/netty/netty-codec-socks/4.1.115.Final/netty-codec-socks-4.1.115.Final.jar:/Users/choeeunhwa/.m2/repository/org/springframework/spring-webflux/6.2.0/spring-webflux-6.2.0.jar:/Users/choeeunhwa/.m2/repository/io/lettuce/lettuce-core/6.5.2.RELEASE/lettuce-core-6.5.2.RELEASE.jar:/Users/choeeunhwa/.m2/repository/io/netty/netty-common/4.1.115.Final/netty-common-4.1.115.Final.jar:/Users/choeeunhwa/.m2/repository/io/netty/netty-handler/4.1.115.Final/netty-handler-4.1.115.Final.jar:/Users/choeeunhwa/.m2/repository/io/netty/netty-resolver/4.1.115.Final/netty-resolver-4.1.115.Final.jar:/Users/choeeunhwa/.m2/repository/io/netty/netty-buffer/4.1.115.Final/netty-buffer-4.1.115.Final.jar:/Users/choeeunhwa/.m2/repository/io/netty/netty-transport-native-unix-common/4.1.115.Final/netty-transport-native-unix-common-4.1.115.Final.jar:/Users/choeeunhwa/.m2/repository/io/netty/netty-codec/4.1.115.Final/netty-codec-4.1.115.Final.jar:/Users/choeeunhwa/.m2/repository/io/netty/netty-transport/4.1.115.Final/netty-transport-4.1.115.Final.jar:/Users/choeeunhwa/.m2/repository/io/projectreactor/reactor-core/3.7.0/reactor-core-3.7.0.jar:/Users/choeeunhwa/.m2/repository/org/reactivestreams/reactive-streams/1.0.4/reactive-streams-1.0.4.jar:/Users/choeeunhwa/.m2/repository/com/mysql/mysql-connector-j/9.1.0/mysql-connector-j-9.1.0.jar:/Users/choeeunhwa/.m2/repository/org/springframework/security/spring-security-crypto/6.4.1/spring-security-crypto-6.4.1.jar:/Users/choeeunhwa/.m2/repository/org/projectlombok/lombok/1.18.36/lombok-1.18.36.jar:/Users/choeeunhwa/.m2/repository/org/springframework/boot/spring-boot-starter-test/3.4.0/spring-boot-starter-test-3.4.0.jar:/Users/choeeunhwa/.m2/repository/org/springframework/boot/spring-boot-test/3.4.0/spring-boot-test-3.4.0.jar:/Users/choeeunhwa/.m2/repository/org/springframework/boot/spring-boot-test-autoconfigure/3.4.0/spring-boot-test-autoconfigure-3.4.0.jar:/Users/choeeunhwa/.m2/repository/com/jayway/jsonpath/json-path/2.9.0/json-path-2.9.0.jar:/Users/choeeunhwa/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.2/jakarta.xml.bind-api-4.0.2.jar:/Users/choeeunhwa/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.3/jakarta.activation-api-2.1.3.jar:/Users/choeeunhwa/.m2/repository/net/minidev/json-smart/2.5.1/json-smart-2.5.1.jar:/Users/choeeunhwa/.m2/repository/net/minidev/accessors-smart/2.5.1/accessors-smart-2.5.1.jar:/Users/choeeunhwa/.m2/repository/org/ow2/asm/asm/9.6/asm-9.6.jar:/Users/choeeunhwa/.m2/repository/org/assertj/assertj-core/3.26.3/assertj-core-3.26.3.jar:/Users/choeeunhwa/.m2/repository/org/awaitility/awaitility/4.2.2/awaitility-4.2.2.jar:/Users/choeeunhwa/.m2/repository/org/hamcrest/hamcrest/2.2/hamcrest-2.2.jar:/Users/choeeunhwa/.m2/repository/org/junit/jupiter/junit-jupiter/5.11.3/junit-jupiter-5.11.3.jar:/Users/choeeunhwa/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.11.3/junit-jupiter-api-5.11.3.jar:/Users/choeeunhwa/.m2/repository/org/opentest4j/opentest4j/1.3.0/opentest4j-1.3.0.jar:/Users/choeeunhwa/.m2/repository/org/junit/platform/junit-platform-commons/1.11.3/junit-platform-commons-1.11.3.jar:/Users/choeeunhwa/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/Users/choeeunhwa/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.11.3/junit-jupiter-params-5.11.3.jar:/Users/choeeunhwa/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.11.3/junit-jupiter-engine-5.11.3.jar:/Users/choeeunhwa/.m2/repository/org/junit/platform/junit-platform-engine/1.11.3/junit-platform-engine-1.11.3.jar:/Users/choeeunhwa/.m2/repository/org/mockito/mockito-core/5.14.2/mockito-core-5.14.2.jar:/Users/choeeunhwa/.m2/repository/net/bytebuddy/byte-buddy-agent/1.15.10/byte-buddy-agent-1.15.10.jar:/Users/choeeunhwa/.m2/repository/org/objenesis/objenesis/3.3/objenesis-3.3.jar:/Users/choeeunhwa/.m2/repository/org/mockito/mockito-junit-jupiter/5.14.2/mockito-junit-jupiter-5.14.2.jar:/Users/choeeunhwa/.m2/repository/org/skyscreamer/jsonassert/1.5.3/jsonassert-1.5.3.jar:/Users/choeeunhwa/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar:/Users/choeeunhwa/.m2/repository/org/springframework/spring-core/6.2.0/spring-core-6.2.0.jar:/Users/choeeunhwa/.m2/repository/org/springframework/spring-jcl/6.2.0/spring-jcl-6.2.0.jar:/Users/choeeunhwa/.m2/repository/org/springframework/spring-test/6.2.0/spring-test-6.2.0.jar:/Users/choeeunhwa/.m2/repository/org/xmlunit/xmlunit-core/2.10.0/xmlunit-core-2.10.0.jar:/Users/choeeunhwa/.m2/repository/com/sun/mail/javax.mail/1.6.2/javax.mail-1.6.2.jar:/Users/choeeunhwa/.m2/repository/javax/activation/activation/1.1/activation-1.1.jar:/Users/choeeunhwa/.m2/repository/org/apache/commons/commons-dbcp2/2.11.0/commons-dbcp2-2.11.0.jar:/Users/choeeunhwa/.m2/repository/org/apache/commons/commons-pool2/2.12.0/commons-pool2-2.12.0.jar:/Users/choeeunhwa/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/choeeunhwa/.m2/repository/org/springdoc/springdoc-openapi-starter-webmvc-ui/2.7.0/springdoc-openapi-starter-webmvc-ui-2.7.0.jar:/Users/choeeunhwa/.m2/repository/org/springdoc/springdoc-openapi-starter-webmvc-api/2.7.0/springdoc-openapi-starter-webmvc-api-2.7.0.jar:/Users/choeeunhwa/.m2/repository/org/springdoc/springdoc-openapi-starter-common/2.7.0/springdoc-openapi-starter-common-2.7.0.jar:/Users/choeeunhwa/.m2/repository/io/swagger/core/v3/swagger-core-jakarta/2.2.25/swagger-core-jakarta-2.2.25.jar:/Users/choeeunhwa/.m2/repository/org/apache/commons/commons-lang3/3.17.0/commons-lang3-3.17.0.jar:/Users/choeeunhwa/.m2/repository/io/swagger/core/v3/swagger-annotations-jakarta/2.2.25/swagger-annotations-jakarta-2.2.25.jar:/Users/choeeunhwa/.m2/repository/io/swagger/core/v3/swagger-models-jakarta/2.2.25/swagger-models-jakarta-2.2.25.jar:/Users/choeeunhwa/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.18.1/jackson-dataformat-yaml-2.18.1.jar:/Users/choeeunhwa/.m2/repository/org/webjars/swagger-ui/5.18.2/swagger-ui-5.18.2.jar:/Users/choeeunhwa/.m2/repository/org/webjars/webjars-locator-lite/1.0.1/webjars-locator-lite-1.0.1.jar:/Users/choeeunhwa/.m2/repository/org/jspecify/jspecify/1.0.0/jspecify-1.0.0.jar:/Users/choeeunhwa/Desktop/member-api5/libs/toast-logncrash-logback-sdk-3.0.5.jar:/Users/choeeunhwa/.m2/repository/net/logstash/logback/logstash-logback-encoder/7.4/logstash-logback-encoder-7.4.jar:/Users/choeeunhwa/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.18.1/jackson-databind-2.18.1.jar:/Users/choeeunhwa/.m2/repository/org/springframework/boot/spring-boot-starter-logging/3.4.0/spring-boot-starter-logging-3.4.0.jar:/Users/choeeunhwa/.m2/repository/ch/qos/logback/logback-classic/1.5.12/logback-classic-1.5.12.jar:/Users/choeeunhwa/.m2/repository/ch/qos/logback/logback-core/1.5.12/logback-core-1.5.12.jar:/Users/choeeunhwa/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.24.1/log4j-to-slf4j-2.24.1.jar:/Users/choeeunhwa/.m2/repository/org/apache/logging/log4j/log4j-api/2.24.1/log4j-api-2.24.1.jar:/Users/choeeunhwa/.m2/repository/org/slf4j/jul-to-slf4j/2.0.16/jul-to-slf4j-2.0.16.jar:/Users/choeeunhwa/.m2/repository/org/json/json/20230227/json-20230227.jar:/Users/choeeunhwa/.m2/repository/org/codehaus/janino/janino/3.1.10/janino-3.1.10.jar:/Users/choeeunhwa/.m2/repository/org/codehaus/janino/commons-compiler/3.1.12/commons-compiler-3.1.12.jar:/Users/choeeunhwa/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-hibernate5/2.15.2/jackson-datatype-hibernate5-2.15.2.jar:/Users/choeeunhwa/.m2/repository/javax/transaction/javax.transaction-api/1.3/javax.transaction-api-1.3.jar:/Users/choeeunhwa/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.18.1/jackson-core-2.18.1.jar:/Users/choeeunhwa/.m2/repository/org/apache/httpcomponents/httpclient/4.5.13/httpclient-4.5.13.jar:/Users/choeeunhwa/.m2/repository/org/apache/httpcomponents/httpcore/4.4.16/httpcore-4.4.16.jar:/Users/choeeunhwa/.m2/repository/commons-logging/commons-logging/1.2/commons-logging-1.2.jar:/Users/choeeunhwa/.m2/repository/commons-codec/commons-codec/1.17.1/commons-codec-1.17.1.jar:/Users/choeeunhwa/.m2/repository/org/springframework/boot/spring-boot-starter-data-redis/3.4.1/spring-boot-starter-data-redis-3.4.1.jar:/Users/choeeunhwa/.m2/repository/org/springframework/data/spring-data-redis/3.4.0/spring-data-redis-3.4.0.jar:/Users/choeeunhwa/.m2/repository/org/springframework/data/spring-data-keyvalue/3.4.0/spring-data-keyvalue-3.4.0.jar:/Users/choeeunhwa/.m2/repository/org/springframework/spring-oxm/6.2.0/spring-oxm-6.2.0.jar:/Users/choeeunhwa/.m2/repository/org/springframework/spring-context-support/6.2.0/spring-context-support-6.2.0.jar:/Users/choeeunhwa/.m2/repository/org/springframework/boot/spring-boot-starter-validation/3.4.0/spring-boot-starter-validation-3.4.0.jar:/Users/choeeunhwa/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/10.1.33/tomcat-embed-el-10.1.33.jar:/Users/choeeunhwa/.m2/repository/org/hibernate/validator/hibernate-validator/8.0.1.Final/hibernate-validator-8.0.1.Final.jar:/Users/choeeunhwa/.m2/repository/jakarta/validation/jakarta.validation-api/3.0.2/jakarta.validation-api-3.0.2.jar:/Users/choeeunhwa/.m2/repository/com/querydsl/querydsl-jpa/5.1.0/querydsl-jpa-5.1.0-jakarta.jar:/Users/choeeunhwa/.m2/repository/com/querydsl/querydsl-core/5.1.0/querydsl-core-5.1.0.jar:/Users/choeeunhwa/.m2/repository/com/mysema/commons/mysema-commons-lang/0.2.4/mysema-commons-lang-0.2.4.jar:/Users/choeeunhwa/.m2/repository/com/querydsl/querydsl-apt/5.1.0/querydsl-apt-5.1.0-jakarta.jar:/Users/choeeunhwa/.m2/repository/com/querydsl/querydsl-codegen/5.1.0/querydsl-codegen-5.1.0.jar:/Users/choeeunhwa/.m2/repository/com/querydsl/codegen-utils/5.1.0/codegen-utils-5.1.0.jar:/Users/choeeunhwa/.m2/repository/org/eclipse/jdt/ecj/3.26.0/ecj-3.26.0.jar:/Users/choeeunhwa/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar:/Users/choeeunhwa/.m2/repository/io/github/classgraph/classgraph/4.8.146/classgraph-4.8.146.jar:"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="/Users/choeeunhwa"/>
    <property name="user.language" value="ko"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2024-07-16"/>
    <property name="java.home" value="/Users/choeeunhwa/Library/Java/JavaVirtualMachines/corretto-21.0.4/Contents/Home"/>
    <property name="file.separator" value="/"/>
    <property name="basedir" value="/Users/choeeunhwa/Desktop/member-api5"/>
    <property name="java.vm.compressedOopsMode" value="Zero based"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="FILE_LOG_CHARSET" value="UTF-8"/>
    <property name="java.awt.headless" value="true"/>
    <property name="apple.awt.application.name" value="ForkedBooter"/>
    <property name="surefire.real.class.path" value="/Users/choeeunhwa/Desktop/member-api5/target/surefire/surefirebooter-20250123001010142_3.jar"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="ftp.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="java.runtime.version" value="21.0.4+7-LTS"/>
    <property name="user.name" value="choeeunhwa"/>
    <property name="stdout.encoding" value="UTF-8"/>
    <property name="path.separator" value=":"/>
    <property name="os.version" value="14.6.1"/>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="java.vendor.version" value="Corretto-21.0.4.7.1"/>
    <property name="localRepository" value="/Users/choeeunhwa/.m2/repository"/>
    <property name="java.vendor.url.bug" value="https://github.com/corretto/corretto-21/issues/"/>
    <property name="java.io.tmpdir" value="/var/folders/x0/pc5pgrnd50s8fk_zrv0hbn8r0000gn/T/"/>
    <property name="java.version" value="21.0.4"/>
    <property name="user.dir" value="/Users/choeeunhwa/Desktop/member-api5"/>
    <property name="os.arch" value="aarch64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="PID" value="85708"/>
    <property name="CONSOLE_LOG_CHARSET" value="UTF-8"/>
    <property name="native.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/Users/choeeunhwa/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:."/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="stderr.encoding" value="UTF-8"/>
    <property name="java.vendor" value="Amazon.com Inc."/>
    <property name="java.vm.version" value="21.0.4+7-LTS"/>
    <property name="sun.io.unicode.encoding" value="UnicodeBig"/>
    <property name="socksNonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="java.class.version" value="65.0"/>
    <property name="LOGGED_APPLICATION_NAME" value="[member-api] "/>
  </properties>
  <testcase name="contextLoads" classname="com.example.msamemberapi.MsaMemberApiApplicationTests" time="0.316">
    <system-out><![CDATA[00:10:10.865 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils -- Could not detect default configuration classes for test class [com.example.msamemberapi.MsaMemberApiApplicationTests]: MsaMemberApiApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
00:10:10.949 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper -- Found @SpringBootConfiguration com.example.msamemberapi.MsaMemberApiApplication for test class com.example.msamemberapi.MsaMemberApiApplicationTests

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/

 :: Spring Boot ::                (v3.4.0)

2025-01-23 00:10:11 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-01-23 00:10:11 [main] WARN  o.s.b.t.j.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer - 

Found multiple occurrences of org.json.JSONObject on the class path:

	jar:file:/Users/choeeunhwa/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar!/org/json/JSONObject.class
	jar:file:/Users/choeeunhwa/.m2/repository/org/json/json/20230227/json-20230227.jar!/org/json/JSONObject.class

You may wish to exclude one of them to ensure predictable runtime behavior

2025-01-23 00:10:11 [main] INFO  c.e.m.MsaMemberApiApplicationTests - Starting MsaMemberApiApplicationTests using Java 21.0.4 with PID 85708 (started by choeeunhwa in /Users/choeeunhwa/Desktop/member-api5)
2025-01-23 00:10:11 [main] INFO  c.e.m.MsaMemberApiApplicationTests - The following 1 profile is active: "dev"
2025-01-23 00:10:11 [main] DEBUG o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@47be41c6
2025-01-23 00:10:12 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-01-23 00:10:12 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-01-23 00:10:12 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 94 ms. Found 5 JPA repository interfaces.
2025-01-23 00:10:12 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-01-23 00:10:12 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-01-23 00:10:12 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.msamemberapi.application.repository.AddressRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-01-23 00:10:12 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.msamemberapi.application.repository.GradePolicyRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-01-23 00:10:12 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.msamemberapi.application.repository.MemberAddressRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-01-23 00:10:12 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.msamemberapi.application.repository.MemberGradeHistoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-01-23 00:10:12 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.msamemberapi.application.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-01-23 00:10:12 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2025-01-23 00:10:12 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=952bb903-c1c4-3641-bc3c-7f64e268ba09
2025-01-23 00:10:13 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'secureKeyManagerService' of type [com.example.msamemberapi.application.service.skm.SecureKeyManagerService] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [secureKeyAnnotationProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.
2025-01-23 00:10:13 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-01-23 00:10:13 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.2.Final
2025-01-23 00:10:13 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-01-23 00:10:13 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-01-23 00:10:13 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-01-23 00:10:13 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-01-23 00:10:13 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'org.apache.commons.dbcp2.BasicDataSource@7c9be48a']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-01-23 00:10:14 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
Hibernate: 
    alter table address 
       drop 
       foreign key FKcnw0s8hudme00qu71e3mqd5ih
Hibernate: 
    alter table member 
       drop 
       foreign key FKrmk732htwsps6osaji3rjvco8
Hibernate: 
    alter table member 
       drop 
       foreign key FKswb523yn1xw3806ojrfpcyadl
Hibernate: 
    alter table member_roles 
       drop 
       foreign key FKet63dfllh4o5qa9qwm7f5kx9x
Hibernate: 
    alter table member_address 
       drop 
       foreign key FKc1mlhav8xpi04w64t263v8qvf
Hibernate: 
    alter table member_address 
       drop 
       foreign key FKeslc8586cwl3ej73mv7gr83x2
Hibernate: 
    alter table member_grade_history 
       drop 
       foreign key FKk9egma51fhx07r9ty7syqd9vt
Hibernate: 
    alter table member_grade_history 
       drop 
       foreign key FKg2b3s3qo96dof3civo90swnx6
Hibernate: 
    drop table if exists address
Hibernate: 
    drop table if exists grade
Hibernate: 
    drop table if exists member
Hibernate: 
    drop table if exists member_roles
Hibernate: 
    drop table if exists member_account
Hibernate: 
    drop table if exists member_address
Hibernate: 
    drop table if exists member_grade_history
Hibernate: 
    drop table if exists user
Hibernate: 
    create table address (
        is_default bit not null,
        created_at datetime(6),
        id bigint not null auto_increment,
        member_id bigint not null,
        updated_at datetime(6),
        alias varchar(255) not null,
        detail_address varchar(255) not null,
        postcode varchar(255),
        road_address varchar(255) not null,
        primary key (id)
    ) engine=InnoDB
Hibernate: 
    create table grade (
        max integer not null,
        min integer not null,
        rate decimal(38,2),
        id bigint not null auto_increment,
        description varchar(255) not null,
        name varchar(255),
        grade enum ('GOLD','PLATINUM','REGULAR','ROYAL') not null,
        primary key (id)
    ) engine=InnoDB
Hibernate: 
    create table member (
        birth datetime(6),
        id bigint not null auto_increment,
        user_id bigint,
        address varchar(255),
        detail_address varchar(255),
        email varchar(255) not null,
        member_account_id varchar(255),
        name varchar(255),
        password varchar(255),
        phone varchar(255),
        postcode varchar(255),
        gender enum ('FEMALE','MALE'),
        member_grade enum ('GOLD','PLATINUM','REGULAR','ROYAL'),
        primary key (id)
    ) engine=InnoDB
Hibernate: 
    create table member_roles (
        member_id bigint not null,
        roles varchar(255)
    ) engine=InnoDB
Hibernate: 
    create table member_account (
        last_logged_in_at datetime(6),
        id varchar(255) not null,
        password varchar(255),
        account_type enum ('ADMIN','PAYCO','REGISTERED'),
        primary key (id)
    ) engine=InnoDB
Hibernate: 
    create table member_address (
        is_default bit not null,
        address_id bigint not null,
        id bigint not null auto_increment,
        member_id bigint not null,
        alias varchar(50) not null,
        primary key (id)
    ) engine=InnoDB
Hibernate: 
    create table member_grade_history (
        created_at date not null,
        grade_policy_id bigint not null,
        id bigint not null auto_increment,
        member_id bigint not null,
        primary key (id)
    ) engine=InnoDB
Hibernate: 
    create table user (
        membership tinyint,
        points integer not null,
        id bigint not null auto_increment,
        name varchar(255),
        phone_number varchar(255),
        primary key (id)
    ) engine=InnoDB
Hibernate: 
    alter table member 
       add constraint UKa9bw6sk85ykh4bacjpu0ju5f6 unique (user_id)
Hibernate: 
    alter table member 
       add constraint UKmbmcqelty0fbrvxp1q58dn57t unique (email)
Hibernate: 
    alter table member 
       add constraint UKnysin06axtrwid8h0adf1iyog unique (member_account_id)
Hibernate: 
    alter table user 
       add constraint UK4bgmpi98dylab6qdvf9xyaxu4 unique (phone_number)
Hibernate: 
    alter table address 
       add constraint FKcnw0s8hudme00qu71e3mqd5ih 
       foreign key (member_id) 
       references member (id)
Hibernate: 
    alter table member 
       add constraint FKrmk732htwsps6osaji3rjvco8 
       foreign key (member_account_id) 
       references member_account (id)
Hibernate: 
    alter table member 
       add constraint FKswb523yn1xw3806ojrfpcyadl 
       foreign key (user_id) 
       references user (id)
Hibernate: 
    alter table member_roles 
       add constraint FKet63dfllh4o5qa9qwm7f5kx9x 
       foreign key (member_id) 
       references member (id)
Hibernate: 
    alter table member_address 
       add constraint FKc1mlhav8xpi04w64t263v8qvf 
       foreign key (address_id) 
       references address (id)
Hibernate: 
    alter table member_address 
       add constraint FKeslc8586cwl3ej73mv7gr83x2 
       foreign key (member_id) 
       references member (id)
Hibernate: 
    alter table member_grade_history 
       add constraint FKk9egma51fhx07r9ty7syqd9vt 
       foreign key (grade_policy_id) 
       references grade (id)
Hibernate: 
    alter table member_grade_history 
       add constraint FKg2b3s3qo96dof3civo90swnx6 
       foreign key (member_id) 
       references member (id)
2025-01-23 00:10:14 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-01-23 00:10:14 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-01-23 00:10:15 [main] INFO  c.e.m.common.web.WebClientConfig - Kakao API Key is successfully loaded.
2025-01-23 00:10:15 [main] DEBUG o.s.web.client.RestTemplate - HTTP GET https://api-keymanager.nhncloudservice.com/keymanager/v1.0/appkey/qTQNj7LyHhdAazH3/secrets/452fd78c768c4bffa03d8486b1dcf5be
2025-01-23 00:10:15 [main] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/yaml, application/*+json]
2025-01-23 00:10:15 [main] DEBUG o.s.web.client.RestTemplate - Response 200 OK
2025-01-23 00:10:15 [main] DEBUG o.s.web.client.RestTemplate - Reading to [com.example.msamemberapi.application.dto.response.KeyResponseDto]
2025-01-23 00:10:15 [main] INFO  o.s.c.o.FeignClientFactoryBean - For 'order-api' URL not provided. Will try picking an instance via load-balancing.
2025-01-23 00:10:15 [main] INFO  o.s.c.o.FeignClientFactoryBean - For 'book-coupon-api' URL not provided. Will try picking an instance via load-balancing.
2025-01-23 00:10:15 [main] ERROR i.n.r.d.DnsServerAddressStreamProviders - Unable to load io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider, fallback to system defaults. This may result in incorrect DNS resolutions on MacOS. Check whether you have a dependency on 'io.netty:netty-resolver-dns-native-macos'. Use DEBUG level to see the full stack: java.lang.UnsatisfiedLinkError: failed to load the required native library
2025-01-23 00:10:16 [main] DEBUG o.s.web.client.RestTemplate - HTTP GET https://api-keymanager.nhncloudservice.com/keymanager/v1.0/appkey/qTQNj7LyHhdAazH3/secrets/105936ae31de41628611ecbd5e08476c
2025-01-23 00:10:16 [main] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/yaml, application/*+json]
2025-01-23 00:10:16 [main] DEBUG o.s.web.client.RestTemplate - Response 200 OK
2025-01-23 00:10:16 [main] DEBUG o.s.web.client.RestTemplate - Reading to [com.example.msamemberapi.application.dto.response.KeyResponseDto]
2025-01-23 00:10:16 [main] DEBUG o.s.web.client.RestTemplate - HTTP GET https://api-keymanager.nhncloudservice.com/keymanager/v1.0/appkey/qTQNj7LyHhdAazH3/secrets/d2a9fc886fc84e208b8d5d44268f3f10
2025-01-23 00:10:16 [main] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/yaml, application/*+json]
2025-01-23 00:10:16 [main] DEBUG o.s.web.client.RestTemplate - Response 200 OK
2025-01-23 00:10:16 [main] DEBUG o.s.web.client.RestTemplate - Reading to [com.example.msamemberapi.application.dto.response.KeyResponseDto]
2025-01-23 00:10:16 [main] INFO  c.e.m.a.s.impl.AddressServiceImpl - Kakao API Key is set.
Loaded Kakao API Key: a647f3b0334d3e5914bdff0748674f64
2025-01-23 00:10:16 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 47 mappings in 'requestMappingHandlerMapping'
2025-01-23 00:10:16 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/addresses, /members/edit] in 'viewControllerHandlerMapping'
2025-01-23 00:10:16 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-01-23 00:10:16 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-01-23 00:10:16 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 3 @ExceptionHandler, 1 ResponseBodyAdvice
2025-01-23 00:10:17 [main] INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-01-23 00:10:17 [main] WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-01-23 00:10:17 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoints beneath base path '/actuator'
2025-01-23 00:10:17 [main] INFO  o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2025-01-23 00:10:17 [main] INFO  c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-01-23 00:10:17 [main] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-01-23 00:10:17 [main] INFO  c.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-01-23 00:10:17 [main] INFO  c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-01-23 00:10:17 [main] INFO  c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-01-23 00:10:17 [main] INFO  c.netflix.discovery.DiscoveryClient - Application is null : false
2025-01-23 00:10:17 [main] INFO  c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-01-23 00:10:17 [main] INFO  c.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-01-23 00:10:17 [main] INFO  c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-01-23 00:10:17 [main] DEBUG o.s.web.client.RestTemplate - HTTP GET http://localhost:8761/eureka/apps/
2025-01-23 00:10:17 [main] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/yaml, application/*+json]
2025-01-23 00:10:17 [main] DEBUG o.s.web.client.RestTemplate - Response 200 OK
2025-01-23 00:10:17 [main] DEBUG o.s.web.client.RestTemplate - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
2025-01-23 00:10:17 [main] INFO  c.netflix.discovery.DiscoveryClient - The response status is 200
2025-01-23 00:10:17 [main] INFO  c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-01-23 00:10:17 [main] INFO  c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-01-23 00:10:17 [main] INFO  c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1737558617291 with initial instances count: 6
2025-01-23 00:10:17 [main] INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application MEMBER-API with eureka with status UP
2025-01-23 00:10:17 [main] INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1737558617295, current=UP, previous=STARTING]
2025-01-23 00:10:17 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_MEMBER-API/member-api: registering service...
2025-01-23 00:10:17 [DiscoveryClient-InstanceInfoReplicator-%d] DEBUG o.s.web.client.RestTemplate - HTTP POST http://localhost:8761/eureka/apps/MEMBER-API
2025-01-23 00:10:17 [DiscoveryClient-InstanceInfoReplicator-%d] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/yaml, application/*+json]
2025-01-23 00:10:17 [DiscoveryClient-InstanceInfoReplicator-%d] DEBUG o.s.web.client.RestTemplate - Writing [InstanceInfo [instanceId = member-api, appName = MEMBER-API, hostName = 192.168.35.248, status = UP, ipAddr = 192.168.35.248, port = 8083, securePort = 443, dataCenterInfo = com.netflix.appinfo.MyDataCenterInfo@587c3504] as "application/json"
2025-01-23 00:10:17 [main] INFO  c.e.m.MsaMemberApiApplicationTests - Started MsaMemberApiApplicationTests in 6.128 seconds (process running for 7.127)
Hibernate: 
    select
        m1_0.id 
    from
        member m1_0 
    where
        m1_0.member_account_id=? 
    limit
        ?
2025-01-23 00:10:17 [DiscoveryClient-InstanceInfoReplicator-%d] DEBUG o.s.web.client.RestTemplate - Response 204 NO_CONTENT
2025-01-23 00:10:17 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_MEMBER-API/member-api - registration status: 204
Hibernate: 
    select
        m1_0.id 
    from
        member m1_0 
    where
        m1_0.member_account_id=? 
    limit
        ?
Hibernate: 
    insert 
    into
        member_account
        (account_type, last_logged_in_at, password, id) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        user
        (membership, name, phone_number, points) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        member
        (address, birth, detail_address, email, gender, member_account_id, member_grade, name, password, phone, postcode, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        member_account
        (account_type, last_logged_in_at, password, id) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        user
        (membership, name, phone_number, points) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        member
        (address, birth, detail_address, email, gender, member_account_id, member_grade, name, password, phone, postcode, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        member_account
        (account_type, last_logged_in_at, password, id) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        user
        (membership, name, phone_number, points) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        member
        (address, birth, detail_address, email, gender, member_account_id, member_grade, name, password, phone, postcode, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        member_account
        (account_type, last_logged_in_at, password, id) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        user
        (membership, name, phone_number, points) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        member
        (address, birth, detail_address, email, gender, member_account_id, member_grade, name, password, phone, postcode, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        member_account
        (account_type, last_logged_in_at, password, id) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        user
        (membership, name, phone_number, points) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        member
        (address, birth, detail_address, email, gender, member_account_id, member_grade, name, password, phone, postcode, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        member_account
        (account_type, last_logged_in_at, password, id) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        user
        (membership, name, phone_number, points) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        member
        (address, birth, detail_address, email, gender, member_account_id, member_grade, name, password, phone, postcode, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        member_account
        (account_type, last_logged_in_at, password, id) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        user
        (membership, name, phone_number, points) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        member
        (address, birth, detail_address, email, gender, member_account_id, member_grade, name, password, phone, postcode, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        member_account
        (account_type, last_logged_in_at, password, id) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        user
        (membership, name, phone_number, points) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        member
        (address, birth, detail_address, email, gender, member_account_id, member_grade, name, password, phone, postcode, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        member_account
        (account_type, last_logged_in_at, password, id) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        user
        (membership, name, phone_number, points) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        member
        (address, birth, detail_address, email, gender, member_account_id, member_grade, name, password, phone, postcode, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        member_account
        (account_type, last_logged_in_at, password, id) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        user
        (membership, name, phone_number, points) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        member
        (address, birth, detail_address, email, gender, member_account_id, member_grade, name, password, phone, postcode, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        member_account
        (account_type, last_logged_in_at, password, id) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        user
        (membership, name, phone_number, points) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        member
        (address, birth, detail_address, email, gender, member_account_id, member_grade, name, password, phone, postcode, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        member_account
        (account_type, last_logged_in_at, password, id) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        user
        (membership, name, phone_number, points) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        member
        (address, birth, detail_address, email, gender, member_account_id, member_grade, name, password, phone, postcode, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        member_account
        (account_type, last_logged_in_at, password, id) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        user
        (membership, name, phone_number, points) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        member
        (address, birth, detail_address, email, gender, member_account_id, member_grade, name, password, phone, postcode, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        member_account
        (account_type, last_logged_in_at, password, id) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        user
        (membership, name, phone_number, points) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        member
        (address, birth, detail_address, email, gender, member_account_id, member_grade, name, password, phone, postcode, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        member_account
        (account_type, last_logged_in_at, password, id) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        user
        (membership, name, phone_number, points) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        member
        (address, birth, detail_address, email, gender, member_account_id, member_grade, name, password, phone, postcode, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        member_account
        (account_type, last_logged_in_at, password, id) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        user
        (membership, name, phone_number, points) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        member
        (address, birth, detail_address, email, gender, member_account_id, member_grade, name, password, phone, postcode, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        member_account
        (account_type, last_logged_in_at, password, id) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        user
        (membership, name, phone_number, points) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        member
        (address, birth, detail_address, email, gender, member_account_id, member_grade, name, password, phone, postcode, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        member_account
        (account_type, last_logged_in_at, password, id) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        user
        (membership, name, phone_number, points) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        member
        (address, birth, detail_address, email, gender, member_account_id, member_grade, name, password, phone, postcode, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        member_account
        (account_type, last_logged_in_at, password, id) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        user
        (membership, name, phone_number, points) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        member
        (address, birth, detail_address, email, gender, member_account_id, member_grade, name, password, phone, postcode, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        member_account
        (account_type, last_logged_in_at, password, id) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        user
        (membership, name, phone_number, points) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        member
        (address, birth, detail_address, email, gender, member_account_id, member_grade, name, password, phone, postcode, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        member_account
        (account_type, last_logged_in_at, password, id) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        user
        (membership, name, phone_number, points) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        member
        (address, birth, detail_address, email, gender, member_account_id, member_grade, name, password, phone, postcode, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        member_account
        (account_type, last_logged_in_at, password, id) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        user
        (membership, name, phone_number, points) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        member
        (address, birth, detail_address, email, gender, member_account_id, member_grade, name, password, phone, postcode, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        member_roles
        (member_id, roles) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        member_roles
        (member_id, roles) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        member_roles
        (member_id, roles) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        member_roles
        (member_id, roles) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        member_roles
        (member_id, roles) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        member_roles
        (member_id, roles) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        member_roles
        (member_id, roles) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        member_roles
        (member_id, roles) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        member_roles
        (member_id, roles) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        member_roles
        (member_id, roles) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        member_roles
        (member_id, roles) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        member_roles
        (member_id, roles) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        member_roles
        (member_id, roles) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        member_roles
        (member_id, roles) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        member_roles
        (member_id, roles) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        member_roles
        (member_id, roles) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        member_roles
        (member_id, roles) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        member_roles
        (member_id, roles) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        member_roles
        (member_id, roles) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        member_roles
        (member_id, roles) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        member_roles
        (member_id, roles) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        member_roles
        (member_id, roles) 
    values
        (?, ?)
Hibernate: 
    select
        m1_0.id 
    from
        member m1_0 
    where
        m1_0.member_account_id=? 
    limit
        ?
Hibernate: 
    insert 
    into
        member_account
        (account_type, last_logged_in_at, password, id) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        user
        (membership, name, phone_number, points) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        member
        (address, birth, detail_address, email, gender, member_account_id, member_grade, name, password, phone, postcode, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        member_roles
        (member_id, roles) 
    values
        (?, ?)
]]></system-out>
    <system-err><![CDATA[Mockito is currently self-attaching to enable the inline-mock-maker. This will no longer work in future releases of the JDK. Please add Mockito as an agent to your build what is described in Mockito's documentation: https://javadoc.io/doc/org.mockito/mockito-core/latest/org/mockito/Mockito.html#0.3
WARNING: A Java agent has been loaded dynamically (/Users/choeeunhwa/.m2/repository/net/bytebuddy/byte-buddy-agent/1.15.10/byte-buddy-agent-1.15.10.jar)
WARNING: If a serviceability tool is in use, please run with -XX:+EnableDynamicAgentLoading to hide this warning
WARNING: If a serviceability tool is not in use, please run with -Djdk.instrument.traceUsage for more information
WARNING: Dynamic loading of agents will be disallowed by default in a future release
]]></system-err>
  </testcase>
</testsuite>